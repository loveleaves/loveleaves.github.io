<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Hardware on 安哲睿</title>
        <link>https://loveleaves.github.io/categories/hardware/</link>
        <description>Recent content in Hardware on 安哲睿</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Andrew Stark</copyright>
        <lastBuildDate>Wed, 08 Oct 2025 12:20:41 +0800</lastBuildDate><atom:link href="https://loveleaves.github.io/categories/hardware/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>【Hardware】PCB设计与开发</title>
        <link>https://loveleaves.github.io/p/embedded_programing_pcb/</link>
        <pubDate>Sun, 21 Sep 2025 00:00:00 +0000</pubDate>
        
        <guid>https://loveleaves.github.io/p/embedded_programing_pcb/</guid>
        <description>&lt;h2 id=&#34;基础知识&#34;&gt;基础知识
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://pan.quark.cn/s/05650fad6466&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;零基础入门PCB设计PPT&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;pcb设计流程&#34;&gt;PCB设计流程
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/pcb_design_steps.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;pipeline&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;元器件选型&#34;&gt;元器件选型
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.szlcsc.com/?c=Q2&amp;amp;lcsc_vid=QlNbUldTQgMPVAFfE1gPV1NTEVJcVFUFEVVcVQUCEQQxVlNTTlVXVF1XRFhbXjsOAxUeFF5JWAIASQYPGQZABAsLWA%3D%3D&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;立创商城（也可大部分数据手册查看）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.lceda.cn/zh-hans/design-production/electronic-selection/digital-logic-chip.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;电子设计选型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pcb版一般包含以下模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单片机最小系统：是指用最少的元件组成的单片机可以工作的系统。对于51系列单片机来说，单片机+晶振电路+复位电路,便组成了一个最小系统。晶振电路是单片机的振荡电路，通过晶振来放大输出信号。复位电路则用于重置单片机的系统状态，使其重新初始化。&lt;/li&gt;
&lt;li&gt;电源电路：单片机最小系统中的电源是指能量的来源，其中VCC(40脚)将电源的正极和GND(20脚)视为电源的输入和输出。接地端(电源负极)则用于与地面形成电气连接。&lt;/li&gt;
&lt;li&gt;外围功能电路：包括按键检测，Led指示灯，排针引出等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pcb布局要求&#34;&gt;PCB布局要求
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.lceda.cn/zh-hans/design-production/pcb-design/layout-guidance.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PCB设计布局指导&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://hilelectronic.com/zh-CN/blog-pcb-layout/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何设计 PCB 布局&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1、必须根据元器件的电气特性和使用特点来布局（这点非常重要），举例如下：对于各种接口、按键和排针，需要放在板子边缘，方便插接，对于屏幕和主控芯片等，一般放在板子中央，对于电源电路，一般放在板子的电源输入旁边并且要注意电流路径和滤波电容位置（非常重要），对于晶振需要靠近单片机晶振引脚摆放等&lt;/li&gt;
&lt;li&gt;2、不要把元器件看成二维物体，而是应该看成三维物体，有时空间有干涉的情况需要考虑&lt;/li&gt;
&lt;li&gt;3、元件的布局应该采用模块化，也就是同一个模块电路的元件应该放同一个区域，按照就近原则来布局，不能东一个西一个&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pcb布线要求&#34;&gt;PCB布线要求
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.lceda.cn/zh-hans/design-production/pcb-design/routing-guidance.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PCB设计走线指导&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/zhi_Alanwu/article/details/127588384&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【硬件设计】布线篇&amp;mdash;&amp;ndash;超实用的PCB布局布线规则&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;布线顺序：&lt;/strong&gt; 关键元件优先、关键信号线优先、密度优先&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(1) 密度优先原则：从单板上连线最密集的区域开始布线。&lt;/li&gt;
&lt;li&gt;(2) 优先关键元器件：如DDR、射频等核心部分应优先布线，类似信号传输线应提供专层、电源、地回路。其他次要信号要顾全整体，不可以和关键信号相抵触。&lt;/li&gt;
&lt;li&gt;(3) 关键信号线优先：电源、模拟小信号、高速信号、时钟信号和同步信号等关键信号优先布线。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;布线要求：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.顶层优先原则：尽量在顶层布线&lt;/li&gt;
&lt;li&gt;2.电源线原则上要加粗：因为电源线是要给电路板各个模块供电的，电源线加粗有利于电流在主干道上流通；在日常PCB设计中，在25℃时，对于铜厚为10z(盎司)的导线，10mil线宽能够承载0.65A电流，40mil线宽能够承载2.3A电流。&lt;/li&gt;
&lt;li&gt;3.同一层内走线大于90°：同一层走线禁止90°或者走锐角，从原理上讲，锐角直角走线会造成走线阻抗不连续，对于信号的传输有影响，推荐走线135°&lt;/li&gt;
&lt;li&gt;4.注意电流路径和电容的摆放位置：电源要先经过电容滤波再给后级，去耦电容要贴近芯片引脚放置，并就近接地。&lt;/li&gt;
&lt;li&gt;5.高频信号线尽可能短，并做好与其他信号的屏蔽隔离。为了降低相邻走线之间的串扰，尽量避免相邻层平行走线，走线应遵循3W原则：相邻层信号线应采用正交方向。差分线布线尽量等距等长。&lt;/li&gt;
&lt;li&gt;6.PCB布线要尽量远离安装孔与电路板边缘：在PCB钻孔加工中，很容易会切掉一部分导线，为了电路板功能，应尽量远离这些位置。&lt;/li&gt;
&lt;li&gt;7.需要添加泪滴。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;原件符号绘制&#34;&gt;原件符号绘制
&lt;/h3&gt;&lt;p&gt;对于元件库中没有的但需要使用的原件，进行元件符号绘制与封装。&lt;/p&gt;
&lt;h2 id=&#34;pcb设计常用知识点&#34;&gt;PCB设计常用知识点
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.lceda.cn/zh-hans/design-production/pcb-design/knowledge-point/difference-pairs.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PCB设计常用知识点&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.lceda.cn/zh-hans/design-production/practical-circuit/0ohm-function.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;电子设计常用知识点&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;差分信号&#34;&gt;差分信号
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;单端信号&lt;/strong&gt;是相对于差分信号而言的，单端输入指信号有一个参考端和一个信号端构成，参考端一般为地端。当耦合噪声时，接收数据无法正常还原。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;差分信号&lt;/strong&gt;是一种信号传输技术，区别于传统的一根信号线一根地线的做法，差分传输在两根数据线上都传输信号，这两个信号的振幅相等，相位相差180°（即相位相反）。在这两根线上传输的信号就是差分信号，而承载差分信号的那一对走线就称为差分走线。&lt;/p&gt;
&lt;h4 id=&#34;差分信号的优点有哪些&#34;&gt;差分信号的优点有哪些？
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;1、抗干扰能力强
&lt;ul&gt;
&lt;li&gt;共模干扰抑制：差分信号对外界噪声具有很强的抗扰能力，因为两条信号线上的噪声是相同的（共模），接收端通过计算差值有效消除了共模噪声。&lt;/li&gt;
&lt;li&gt;磁场耦合小：差分信号线之间的电流方向相反，产生的电磁场互相抵消，因此对外部设备的电磁干扰（EMI）小。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2、信号完整度高
&lt;ul&gt;
&lt;li&gt;抑制信号反射：两条线之间的特性阻抗匹配更容易实现，从而减少信号反射，保证信号完整性。&lt;/li&gt;
&lt;li&gt;减少地回路问题：差分信号不完全依赖地作为电流的回流路径，减少了地回路的干扰，对于差分信号而言，最大的影响是对地阻抗是否一致，也就是对地平衡度，它们之间相对的阻抗影响并不特别重要，之间分布电容大了只会衰落信号强度，不会引入噪声和干扰，也就是对信噪比不会产生很大影响。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3、支持信号高速传输
&lt;ul&gt;
&lt;li&gt;差分信号在高速传输中表现优异，能够更好地保持波形，减少信号失真和抖动，适合用于高速数据总线（如PCIe、USB、HDMI等）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;4、电磁辐射低
&lt;ul&gt;
&lt;li&gt;差分信号的电流方向相反，形成的磁场互相抵消，大大降低了电磁辐射，符合更高的EMC（电磁兼容性）要求。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;5、传输距离远
&lt;ul&gt;
&lt;li&gt;在相同的条件下，差分信号比单端信号能传输更长的距离，同时保持良好的信号质量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;差分信号在pcb中的设计要求有哪些&#34;&gt;差分信号在PCB中的设计要求有哪些？
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;认识差分信号，在PCB设计中，差分信号的命名通常有“+、-、P、N”等标识&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/differential-signal_1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;differential-signal&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/differential-signal_2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;differential-signal&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/differential-signal_3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;differential-signal&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;差分信号往往是速度较快、且在整个项目中比较重要的，在布局走线时要重点考虑，尽量保证差分信号顺畅以及距离短。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/differential-signal_4.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;differential-signal&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/differential-signal_5.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;differential-signal&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;差分信号在走线时，非必要不换层，若一定要换层，在换层的附近添加回流地过孔&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/differential-signal_6.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;differential-signal&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;差分信号内不能有其余走线，若有匹配电阻或上拉电阻，也应该对称摆放。一般差分线间距较小，在电阻的选择上一般不大于0603，否则器件本身尺寸就会导致差分线耦合效果差，影响信号完整性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/differential-signal_7.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;differential-signal&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/differential-signal_8.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;differential-signal&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;差分信号在走线时，不可避免会有拐弯或打孔导致线长不一致，差分信号是接收两根信号的差值，需要保证相位的同步，同组差分信号一般不超过±5mil误差，在进行差分等长时，尽量满足小于3W间距（3倍线宽）以及小于2H（2倍间距）规则。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/differential-signal_9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;differential-signal&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;特性阻抗&#34;&gt;特性阻抗
&lt;/h3&gt;&lt;p&gt;特性阻抗是电磁波在传输线中传播时遇到的阻抗，反映了信号传输的质量和效率。在PCB设计中，控制特性阻抗对确保信号完整性和减少反射至关重要。&lt;/p&gt;
&lt;p&gt;特性阻抗（Z₀）是传输线上电压波与电流波的比值。&lt;/p&gt;
&lt;p&gt;计算公式为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/Impedance_1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Impedance&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R 为单位长度电阻；&lt;/li&gt;
&lt;li&gt;L 为单位长度电感；&lt;/li&gt;
&lt;li&gt;G 为单位长度电导；&lt;/li&gt;
&lt;li&gt;C 为单位长度电容；&lt;/li&gt;
&lt;li&gt;ω 为角频率（ω=2πf，f是频率）；&lt;/li&gt;
&lt;li&gt;j 为虚数单位（j²=-1）；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;1单端阻抗&#34;&gt;1、单端阻抗
&lt;/h4&gt;&lt;p&gt;单端阻抗（Single-Ended Impedance）是指信号线与参考平面（通常是地平面或电源平面）之间的阻抗，适用于单端信号传输。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见的单端阻抗值有50Ω、75Ω等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在高频下，单端特性阻抗可简化为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/Impedance_2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Impedance&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L 是单位长度的电感；&lt;/li&gt;
&lt;li&gt;C 是单位长度的电容；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2差分阻抗&#34;&gt;2、差分阻抗
&lt;/h4&gt;&lt;p&gt;差分阻抗（Differential Impedance）是指一对差分信号线之间的阻抗，适用于差分信号传输。差分阻抗可分为差模阻抗和共模阻抗，其中差模阻抗用于描述正负差分信号之间的阻抗，而共模阻抗则用于描述这两个信号与地之间的阻抗。常用于高速信号传输（如USB、HDMI、PCIe、以太网等）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见的差分阻抗值有90Ω、100Ω等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在高频下，差分特性阻抗可简化为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/Impedance_3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Impedance&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Z₀是单端阻抗；&lt;/li&gt;
&lt;li&gt;k 是两条差分线之间的耦合系数（通常为0.1~0.3）；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3阻抗控制作用&#34;&gt;3、阻抗控制作用
&lt;/h4&gt;&lt;p&gt;在PCB设计中，如果不控制阻抗，可能会对信号完整性、系统性能和可靠性产生严重影响。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当信号在传输线中遇到阻抗不连续点时（如阻抗不匹配），部分信号会被反射回源端。&lt;/li&gt;
&lt;li&gt;阻抗不匹配会增加信号之间的电磁耦合，导致相邻信号线之间的干扰。&lt;/li&gt;
&lt;li&gt;阻抗不匹配会导致信号能量损失，信号衰减，可能使得信号在到达接收端时，无法被正确识别。&lt;/li&gt;
&lt;li&gt;阻抗不匹配会影响信号的传播速度和时序，时序偏差错乱，导致数据错误，系统无法同步。&lt;/li&gt;
&lt;li&gt;阻抗不匹配会引起时钟信号的反射和失真，时钟信号不稳定或抖动，会导致系统时序紊乱，降低系统性能。&lt;/li&gt;
&lt;li&gt;阻抗不匹配会影响电源分布网络，导致信号能量通过电源或地线传导，增加电源噪声，影响系统稳定性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;阻抗匹配&#34;&gt;阻抗匹配
&lt;/h3&gt;&lt;p&gt;阻抗匹配是指在电路中，将负载的阻抗与信号源的输出阻抗调整为相等或接近相等，以实现信号能量的最大传输或减少信号反射的过程。&lt;/p&gt;
&lt;h4 id=&#34;造成阻抗不匹配的原因&#34;&gt;造成阻抗不匹配的原因
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;电路设计不当，比如导线时宽时窄，或GND平面不完整。&lt;/li&gt;
&lt;li&gt;器件特性不一致，走线以及PCB板会带有寄生电容、电感、电阻等，导致实际阻抗偏离&lt;/li&gt;
&lt;li&gt;系统参数变化，比如从外接线缆到PCB板，器件本身材质不一致导致阻抗不一致。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;阻抗不匹配的后果&#34;&gt;阻抗不匹配的后果
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;在高频电路中，当传输线与发送端阻抗不匹配时，会产生反射、振荡、过充等现象，并叠加至原本的信号被接收端收到，此时可能会导致接收端数据异常。&lt;/li&gt;
&lt;li&gt;在模拟信号中，若阻抗不匹配，同样容易造成电压抖动、过充等现象，导致ADC转换数据抖动或异常。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;如何计算阻抗&#34;&gt;如何计算阻抗
&lt;/h4&gt;&lt;p&gt;影响阻抗的因素有很多，导线宽度、PCB板材、PCB层叠、GND平面等等，在进行阻抗匹配计算时，通常会使用专门的工具来进行计算。比如：&lt;a class=&#34;link&#34; href=&#34;https://tools.jlc.com/jlcTools/index.html#/impedanceCalculatenew&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;嘉立创阻抗计算神器&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;根据输入参数的不同，计算的结果也不相同，在进行阻抗计算时，首先需要清楚所需的阻抗，其次是传输线的传输方式（差分、单端），根据参考平面与阻抗线所在平面的区别分为共面或隔层参考。（共面参考主要影响是阻抗线到参考平面的距离、隔层参考主要影响是参考层与阻抗层的层叠）。&lt;/p&gt;
&lt;p&gt;阻抗计算结果可能不符合实际生产设计需要，此时需要不断调整相关参数，选择一个价格、设计折中的方案。&lt;/p&gt;
&lt;h4 id=&#34;常见高速信号阻抗计算&#34;&gt;常见高速信号阻抗计算
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;USB传输线阻抗要求：差分90欧姆，差分对内长度误差≤5mil；传输线长度尽量不超过1800mil；&lt;/li&gt;
&lt;li&gt;网口传输线阻抗要求：差分100欧姆，差分对内长度误差≤5mil；传输线长度尽量不超过1500mil；&lt;/li&gt;
&lt;li&gt;HDMI传输线阻抗要求：差分100欧姆，单端50欧姆，差分对内长度误差≤5mil；传输线长度尽量不超过500mil；&lt;/li&gt;
&lt;li&gt;射频天线阻抗要求：单端50欧姆，走线周围要有良好的接地平面，尽可能保证射频信号区域内净空无其他干扰。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pcb-层压结构&#34;&gt;PCB 层压结构
&lt;/h3&gt;&lt;h4 id=&#34;pcb叠层的基本组成&#34;&gt;PCB叠层的基本组成
&lt;/h4&gt;&lt;p&gt;  PCB 叠层（PCB Stack-up）通常由导电铜箔（信号层和电源/地层）和绝缘材料（介质层）交替组成。合理的叠层设计对PCB的电气特性、物理性能、机械性能、可靠稳定性和制造成本等至关重要。&lt;/p&gt;
&lt;h4 id=&#34;叠层设置的基本原则&#34;&gt;叠层设置的基本原则
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;主芯片相邻层为地平面，在布线时提供良好的参考地平面；&lt;/li&gt;
&lt;li&gt;信号层尽量避免直接相邻，以减少串扰；&lt;/li&gt;
&lt;li&gt;所有信号层最好与地平面相邻，以保证完整信号的回流；&lt;/li&gt;
&lt;li&gt;主电源尽可能与地平面相邻，降低电源平面阻抗；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;常见的叠层结构&#34;&gt;常见的叠层结构
&lt;/h4&gt;&lt;p&gt;  以下是一些典型的PCB叠层结构，实际设计可根据实际应用情况进行调整。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;双层板：包含两层导电铜箔层，中间是绝缘介电层。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/PCB-Stack-up_1.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;PCB-Stack-up&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;四层板：包含四层导电铜箔层，每两层铜箔中间夹一层绝缘介电层。通常在靠近元器件多的内层里铺一层完整的GND。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/PCB-Stack-up_2.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;PCB-Stack-up&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;六层板及以上：增加了更多的导电铜箔层，每两层铜箔中间夹一层绝缘介电层，提供更好的电源分配和信号隔离。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3w--20h-规则&#34;&gt;3W &amp;amp; 20H 规则
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s/ih6QF9pwmiBS1N1kUzO1mA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;高速板中3W规则和20H规则说明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;高速设计中-3w-规则指的是什么&#34;&gt;高速设计中 3W 规则指的是什么？
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;3W 规则是指：信号线的中心间距不少于 3 倍线宽时，则可保证 70%的电场不互相干扰，称为 3W 规则。使用原因是一般信号线间距足够大时，可以减少信号线之间的串扰。当满足 2W 间距时，可保证 50%的电场不互相干扰。如果要达到 98%的电场不互相干扰，则需使用 10W 间距。&lt;/li&gt;
&lt;li&gt;注意 3W 指的是俩根信号线的中心距。例：嘉立创 EDA 软件规则设计中，例如：导线是 5mil，对应 3W 间距，线与线之间的中心距是 15mil,这里安全间 距也就是线与线之间最近的边缘间距是 10mil。图片所示均为中心间距。&lt;/li&gt;
&lt;li&gt;在 PCB 设计中一般时钟线，差分线，视频信号线，音频信号线，复位信号等需满足 3W 规则；普通的信号线一般满足 2W 规则即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/3w-rule_1.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;3w-rule&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;为什么要做-3w-处理&#34;&gt;为什么要做 3W 处理？
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;可以减少串扰：满足3W原则能使信号间的串扰减少70%。串扰是信号线之间的电场和磁场相互作用而产生的干扰，它会影响信号的完整性。通过增大线间距，可以降低这种干扰从而提高信号质量。&lt;/li&gt;
&lt;li&gt;提高信号完整性：减少串扰有助于保持信号的完整性，降低噪声对信号的影响。这对于高速信号传输尤为重要，因为高速信号对噪声和干扰更为敏感。&lt;/li&gt;
&lt;li&gt;优化PCB布局：遵循3W规则有助于优化PCB布局，使得信号线之间的距离更加合理，从而提高PCB的可靠性和稳定性。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;高速板中常说的20h指的是什么&#34;&gt;高速板中常说的20H指的是什么？
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;20H规则：将电源层相对于地层内缩，使电场只在接地层的范围内传导。其中，一个H（电源和地之间的介质厚度）为单位，内缩20H可将70%的电场限制在接地层边沿内。若内缩100H则可将98%的电场限制在内。&lt;/li&gt;
&lt;li&gt;内缩原因是电源层和地层之间的电场是变化的，在板子的边缘会向外辐射电磁干扰，将电源层内缩，可以让电场只在接地层的范围内传导，有效提高了EMC。&lt;/li&gt;
&lt;li&gt;一般，在PCB设计时把电源层比地层内缩1mm，或者必须≥20mil，优先40mil，基本就可以满足20H的原则。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/3w-rule_2.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;3w-rule&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;回流路径&#34;&gt;回流路径
&lt;/h3&gt;&lt;p&gt;回流路径（return current path）设计是PCB设计中的核心问题之一，涉及信号完整性、电源完整性和EMI性能。&lt;/p&gt;
&lt;p&gt;回流路径是电流从负载返回电源的路径。当信号从驱动器传输到接收器时，电流会通过信号线流向负载，然后通过地平面、电源平面或其他导体返回电源，形成完整的回路。回流路径并不是“地”的专属概念，它可以是地平面、电源平面，甚至是相邻的信号线（例如差分信号的回流路径）。&lt;/p&gt;
&lt;h4 id=&#34;回流类型&#34;&gt;回流类型
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;地回流路径：电流通过地平面返回电源，适用于单端信号传输，地平面通常具有较低的阻抗，能够提供稳定的回流路径，需注意地平面完整，避免分割导致回流路径不连续。&lt;/li&gt;
&lt;li&gt;电源回流路径：电流通过电源平面返回电源，适用于差分信号或某些高速信号，电源平面和地平面之间可以通过去耦电容形成高频回流路径，需要注意电源平面的噪声问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;设计原则&#34;&gt;设计原则
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;最小回流路径：回流路径应尽可能短，以减小环路面积，降低辐射和感应噪声。&lt;/li&gt;
&lt;li&gt;连续平面：尽量使用连续的地平面或电源平面，避免分割平面导致回流路径不连续。&lt;/li&gt;
&lt;li&gt;避免跨分割：信号线不应跨越平面分割区，否则回流路径会绕行，增加环路面积和EMI。&lt;/li&gt;
&lt;li&gt;差分信号：差分信号的回流路径相互抵消，能有效减少EMI。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;跨平面分割&#34;&gt;跨平面分割
&lt;/h4&gt;&lt;p&gt;  在PCB设计中，参考平面可能会被分割（例如模拟地和数字地的分割），此时，信号线跨越参考平面的分割区域，会导致回流路径不连续，回流路径被迫绕行，路径变长，环路面积增大，可能产生辐射噪声。&lt;/p&gt;
&lt;p&gt;解决方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽量避免参考平面的分割。&lt;/li&gt;
&lt;li&gt;如果必须分割，确保信号线不跨越分割区域。&lt;/li&gt;
&lt;li&gt;高速信号在分割区域附近放置桥接电容，一般采用100nF，不可使用0Ω电阻。在高频下，电容的阻抗非常低，能够有效传递高频信号。为高频回流电流提供低阻抗路径。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pcb常见模块设计参考&#34;&gt;PCB常见模块设计参考
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.lceda.cn/zh-hans/design-production/pcb-design/moduler-design/ldo-moduler.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PCB常见模块设计参考&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;ldo模块&#34;&gt;LDO模块
&lt;/h3&gt;&lt;p&gt;LDO（low dropout regulator，低压差线性稳压器）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意点：AMS1117一般输出电容使用钽电容而非陶瓷电容。&lt;/li&gt;
&lt;li&gt;常用款型：1117（如AMS1117）、&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1tU4y1k7cS&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;除了1117，还有哪些更好用的线性稳压器？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;优点：
&lt;ul&gt;
&lt;li&gt;LDO外围器件少，电路简单，成本低，通常只需要加一两个旁路电容&lt;/li&gt;
&lt;li&gt;LDO负载响应快，输出纹波小，噪声小&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺点：
&lt;ul&gt;
&lt;li&gt;效率低，输入输出压差不能太大&lt;/li&gt;
&lt;li&gt;体积大、不支持mlcc、只能降压&lt;/li&gt;
&lt;li&gt;静态电流过高、发热温度高&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;布局参考&#34;&gt;布局参考
&lt;/h4&gt;&lt;p&gt;LDO虽然电路结构简单，但其效率不高，工作时输入输出的电压差都被转换成热能消耗了。所以在进行LDO布局时需考虑散热问题，部分芯片还可添加散热片辅助散热。输入/输出电容尽量靠近输入/输出引脚摆放，滤波电容从大到小依次摆放，LDO两边的电容数量需要保持一致，这样才能保证电源的输入/输出端流入地的电流平衡，布局要点如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按照电源信号的输入/输出路径，布局时按一字型或者L型摆放；&lt;/li&gt;
&lt;li&gt;电容按先大后小顺序摆放，就近输入/输出管脚；&lt;/li&gt;
&lt;li&gt;输入/输出电容GND引脚尽量朝一个方向，保持GND方向一致，减少回流路径。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/ldo_1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;ldo&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;走线参考&#34;&gt;走线参考
&lt;/h4&gt;&lt;p&gt;LDO走线时由于电路连接比较简单，走线时沿着信号方向引出即可，一般只需要考虑线宽是否能够承载整个系统的电流即可。在单面板设计时保持GND信号的完整性，输入输出部分可直接用铜皮填充；当使用双面板以及多层板设计时，需在GND焊盘附近整齐放置一些GND过孔。注意事项如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电源输入输出信号可直接全填充或粗导线连接，确保铜皮宽度能够过系统最大电流；&lt;/li&gt;
&lt;li&gt;走线尽可能直，避免不必要拐弯，必须拐弯时走钝角或圆弧；&lt;/li&gt;
&lt;li&gt;走线时根据信号流向，输入信号先经过电容再到芯片，输出走线也需先过电容再输出；&lt;/li&gt;
&lt;li&gt;双多层板设计时在加一些整齐统一的过孔保证各层间GND的连接；&lt;/li&gt;
&lt;li&gt;走线后在板子上可根据电路需要添加必要丝印信息提示，避免焊错或接线错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/ldo_2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;ldo&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;dc-dc模块&#34;&gt;DC-DC模块
&lt;/h3&gt;&lt;p&gt;DC/DC转换器一种是开关电源稳压器，指利用电容、电感的储能的特性，通过可控开关（MOSFET等）进行高频开关的动作，将输入的电能储存在电容（感）里，当开关断开时，电能再释放给负载，提供能量。&lt;/p&gt;
&lt;p&gt;DC-DC转换器（非隔离式DC-DC）根据其&lt;strong&gt;功能&lt;/strong&gt;可分为三种基本拓扑结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;降压转换器(Buck Converter)：当输入电压高于所需输出电压时使用&lt;/li&gt;
&lt;li&gt;升压转换器(Boost Converter)：当输入电压低于所需输出电压时使用&lt;/li&gt;
&lt;li&gt;升降压转换器(Buck-Boost Converter)：当输入电压可能高于或低于输出电压时使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;优缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺点：
&lt;ul&gt;
&lt;li&gt;外围器件多，电路复杂，成本高&lt;/li&gt;
&lt;li&gt;负载响应比LDO慢，输出纹波大，噪声大&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;优点：
&lt;ul&gt;
&lt;li&gt;效率高，输入电压范围宽泛&lt;/li&gt;
&lt;li&gt;支持降压和升压&lt;/li&gt;
&lt;li&gt;输出电流高，功率大&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;布局参考-1&#34;&gt;布局参考
&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/dc-dc_1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;dc-dc&#34;
	
	
&gt;
PCB的良好布局对DCDC电源非常至关重要，他能直接影响到产品的稳定性和转换的效果。总结规则如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;旁路去耦电容靠近输入/输出端摆放（如图4-15）&lt;/li&gt;
&lt;li&gt;从数据手册中看出PH引脚是电源IC的开关节点，那么电感和环流二极管应尽量靠近PH引脚摆放，尽可能的缩小PCB的导体面积，防止电容过度耦合和减小电流环路面积（如图4-16所示）&lt;/li&gt;
&lt;li&gt;在电源整体布局时，尽量横平竖直的摆放，不要将器件摆放的过于杂乱，避免增加电源路径（如图4-17所示）&lt;/li&gt;
&lt;li&gt;DC-DC电源芯片在工作时会产生一些热量，所以布局时，应提前注意是否有对热源敏感的器件，避免影响到其他器件的工作（如图4-19所示）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/dc-dc_2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;dc-dc&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/dc-dc_3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;dc-dc&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/dc-dc_4.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;dc-dc&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;走线参考-1&#34;&gt;走线参考
&lt;/h4&gt;&lt;p&gt;   DC-DC模块常用于大电流使用，且走线对其效果影响较大，注意事项如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入和输出的电源走线一定要计算好走线宽度，大电流/电压可以使用铺铜方式或者全填充 方式进行连接；&lt;/li&gt;
&lt;li&gt;所有的走线尽可能的短和直，减少电源路径&lt;/li&gt;
&lt;li&gt;GND焊盘使用铺铜或全连接连接，输入输出GND尽可能位于一块铜皮上，同时在底层铺铜（注意避开电感区域），在GND焊盘处打上过孔进行连通，缩短电源的回流路径；&lt;/li&gt;
&lt;li&gt;DC-DC反馈走线不能直接走在电感、二极管、大电容、IC芯片散热焊盘下面，也不能被大电流环包围，反馈线不是电源走线，不需要加粗，正常信号线宽度（10mil/15mil）即可）；&lt;/li&gt;
&lt;li&gt;如果芯片下方有热焊盘，则需要使用多个过孔连接到底层，增强散热性&lt;/li&gt;
&lt;li&gt;电感器件底部尽量不走线，避免电感产生的电磁信号影响到信号线的传输；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/dc-dc_5.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;dc-dc&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/dc-dc_6.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;dc-dc&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/dc-dc_7.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;dc-dc&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loveleaves.github.io/imgs/pcb/dc-dc_8.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;dc-dc&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;电源模块&#34;&gt;电源模块
&lt;/h3&gt;&lt;h4 id=&#34;电容滤波&#34;&gt;电容滤波
&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/opus/876829663819726903&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;芯片IC每个电源引脚旁边的电容的作用、选择和放置？&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;在电源输入和IC引脚处，一般会加两个比如10uF和0.1uF的电容，进行滤波，大电容靠近电源，小电容靠近元件。&lt;/p&gt;
&lt;p&gt;电容尽量放到靠近IC引脚处，并且要经过电容再到IC 引脚，而且电源分支尽量在进电容前进行，因为如果摆放很远的话，电容滤除噪声后的电源会在这个段路径上又串扰进新的噪声，那么这个电容的作用就没有太大的意义。&lt;/p&gt;
&lt;h3 id=&#34;usb接口&#34;&gt;USB接口
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.eet-china.com/mp/a401258.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;USB接口PCB设计全攻略&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.lceda.cn/zh-hans/design-production/practical-circuit/typec-5.1k.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;为什么Type-c接口要加5.1K电阻下拉&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;CC引脚不使用时，一般连接1个5.1K下拉电阻接地。&lt;/p&gt;
&lt;h3 id=&#34;晶振&#34;&gt;晶振
&lt;/h3&gt;&lt;h4 id=&#34;布局参考-2&#34;&gt;布局参考
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;晶振电路布局需要优先考虑，整体紧凑摆放，晶振尽量靠近 IC，负载电容放置于晶振与 IC 之间，以减少时钟信号传输的延迟和干扰；&lt;/li&gt;
&lt;li&gt;晶振摆放尽量远离板边和接口器件，减少其受外部物理因素干扰的风险，如物理撞击等；&lt;/li&gt;
&lt;li&gt;晶振需远离干扰源，如电感、大功率驱动器、RF天线等；&lt;/li&gt;
&lt;li&gt;晶振区域的底层不可放置其余器件，需保证晶振区域的净空；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;布线参考&#34;&gt;布线参考
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;晶振电路的时钟信号走线越短越好，可以按照类差分走线，晶振的时钟走线不可打过孔走线连接；&lt;/li&gt;
&lt;li&gt;在晶振走线周围通过GND过孔进行包地，每隔50-100mil间距整齐放置屏蔽地过孔，用以隔离吸收晶振辐射的噪声；&lt;/li&gt;
&lt;li&gt;晶振区域同层需要净空处理，可以使用禁止铺铜区域进行隔离，晶振本体相邻层最好不要走线，保证地的完整性；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;电子设计常用电路&#34;&gt;电子设计常用电路
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.lceda.cn/zh-hans/design-production/practical-circuit/anti-reverse-circuit.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;电子设计常用电路&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;电源防反接电路&#34;&gt;电源防反接电路
&lt;/h3&gt;&lt;p&gt;在日常电子设计过程中，经常会使用排针、电池等容易插反的接口进行供电，此时一旦电源接反，会导致短路，通常芯片内部也无法承受反向电流，可能会导致芯片损坏。&lt;/p&gt;
&lt;h4 id=&#34;二极管防反接&#34;&gt;二极管防反接
&lt;/h4&gt;&lt;p&gt;使用一个二极管串联在电路中，当电源正常接入时，二极管导通,当电源反接时，二极管反向截止，整个系统不会有电流经过，但是此时二极管需要承担整个电路的电流，且自身会有压降，输出电压与实际输入电压会有一个二极管压差，建议综合电路负载电流情况选择不同型号的肖特基二极管。&lt;/p&gt;
&lt;h2 id=&#34;开源项目&#34;&gt;开源项目
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.lceda.cn/zh-hans/course-projects/electronic-fabrication/aluminum-alloy-docking-station.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;嘉立创-USB2.0拓展坞&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://oshwhub.com/expert/gai-jin-xin-exlink-duo-gong-neng-diao-shi-qi-fen-li-die-ban&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Exlink最好用的嵌入式多功能调试器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1At421h7Ui/?spm_id_from=333.788.player.switch&amp;amp;vd_source=239d861d96125b8edb41d49a38169fda&amp;amp;p=25&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【教程】零基础入门PCB设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1fFAfeZEBE/?spm_id_from=333.788.top_right_bar_window_default_collection.content.click&amp;amp;vd_source=239d861d96125b8edb41d49a38169fda&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【教程】大师篇-零基础入门PCB设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://oshwhub.com/expert/works&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Expert电子实验室&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1CoGuzEEeN/?spm_id_from=333.788.top_right_bar_window_default_collection.content.click&amp;amp;vd_source=239d861d96125b8edb41d49a38169fda&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;STM32手表教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>【嵌入式编程】 嵌入式编程介绍</title>
        <link>https://loveleaves.github.io/p/embedded_programing_intro/</link>
        <pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate>
        
        <guid>https://loveleaves.github.io/p/embedded_programing_intro/</guid>
        <description>&lt;h2 id=&#34;嵌入式编程介绍&#34;&gt;嵌入式编程介绍
&lt;/h2&gt;&lt;p&gt;嵌入式编程（Embedded Programming）是指在嵌入式系统中编写软件的过程，嵌入式系统通常是专门为某一特定任务设计的计算机系统，不像传统计算机那样可以运行多种应用程序。嵌入式系统的应用非常广泛，从智能家居设备、汽车控制系统、工业自动化，到医疗设备等，几乎无处不在。&lt;/p&gt;
&lt;h3 id=&#34;嵌入式编程是什么&#34;&gt;嵌入式编程是什么？
&lt;/h3&gt;&lt;p&gt;嵌入式编程是为了控制嵌入式系统硬件而编写的软件。嵌入式系统通常具有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;资源有限&lt;/strong&gt;：嵌入式系统一般硬件资源有限，如内存、处理能力、电池寿命等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;任务专一&lt;/strong&gt;：嵌入式系统通常只执行单一任务或有限的几个任务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高实时性&lt;/strong&gt;：很多嵌入式系统需要满足严格的实时性要求，即程序必须在特定时间内完成特定操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;稳定性高&lt;/strong&gt;：由于嵌入式设备通常需要长时间运行，因此软件的稳定性和可靠性至关重要。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嵌入式编程不仅仅是开发简单的软件，它还需要开发者对硬件有一定了解，能够在有限的资源下优化代码，确保系统的高效和稳定运行。&lt;/p&gt;
&lt;h3 id=&#34;嵌入式编程的基础&#34;&gt;嵌入式编程的基础
&lt;/h3&gt;&lt;h4 id=&#34;硬件平台&#34;&gt;硬件平台
&lt;/h4&gt;&lt;p&gt;嵌入式编程首先需要选择合适的硬件平台。常见的嵌入式硬件平台包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;单片机（MCU）&lt;/strong&gt;：例如STMicroelectronics的STM32、Atmel的AVR系列、Microchip的PIC系列等。单片机广泛应用于各种小型设备。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开发板&lt;/strong&gt;：如树莓派、Arduino、ESP32等，它们适合快速原型开发。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FPGA&lt;/strong&gt;：如Xilinx、Intel（Altera）等的FPGA芯片，适用于对硬件有高要求的应用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ASIC&lt;/strong&gt;：定制/半定制芯片，设计用于解决特殊需求。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;嵌入式操作系统&#34;&gt;嵌入式操作系统
&lt;/h4&gt;&lt;p&gt;对于一些复杂的嵌入式应用，开发者需要选择合适的操作系统来管理硬件资源。常见的嵌入式操作系统有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RTOS（实时操作系统）&lt;/strong&gt;：如FreeRTOS、ChibiOS等，适用于需要高实时性的嵌入式应用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;：例如在树莓派等开发板上运行嵌入式Linux，适用于需要丰富功能和较强处理能力的系统。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;裸机编程&lt;/strong&gt;：没有操作系统支持，直接对硬件进行编程，适用于资源较为有限的设备。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;编程语言&#34;&gt;编程语言
&lt;/h4&gt;&lt;p&gt;嵌入式开发常用的编程语言主要有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C语言&lt;/strong&gt;：由于其高效、底层控制能力和较小的代码体积，C语言是嵌入式编程中最常用的语言。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C++&lt;/strong&gt;：对于一些更复杂的系统，C++提供了面向对象的特性，帮助开发者更好地管理代码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;汇编语言&lt;/strong&gt;：在一些资源非常有限或者对性能要求极高的场景下，可能需要使用汇编语言来直接控制硬件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;嵌入式编程工具&#34;&gt;嵌入式编程工具
&lt;/h4&gt;&lt;p&gt;嵌入式开发离不开合适的开发工具，这些工具通常包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;IDE（集成开发环境）&lt;/strong&gt;：如Keil、IAR Embedded Workbench、Eclipse等，用于编写、编译和调试嵌入式代码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编译器&lt;/strong&gt;：GCC（GNU Compiler Collection）是最常用的开源编译器，它支持多种架构的嵌入式开发。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;调试工具&lt;/strong&gt;：JTAG调试器、SWD（Serial Wire Debug）调试器等，用于硬件级调试，帮助开发者实时查看代码执行状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;仿真器&lt;/strong&gt;：一些开发环境如Proteus提供硬件仿真，帮助开发者在没有实际硬件的情况下测试代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cloud.tencent.com/developer/news/442444&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;soc介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/qcloud1001/p/6617764.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;深入理解CPU和异构计算芯片GPU/FPGA/ASIC （上篇）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
